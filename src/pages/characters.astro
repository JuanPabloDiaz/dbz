---
import Layout from '../layouts/Layout.astro';
import CharacterCard from '../components/CharacterCard.astro';
import Pagination from '../components/Pagination.astro';
import { dragonBallApi } from '../utils/api';
import type { Character } from '../types/api';

// Para sitios estáticos, cargamos la primera página por defecto
let characters: Character[] = [];
let meta = {
  totalItems: 0,
  itemCount: 0,
  itemsPerPage: 12,
  totalPages: 0,
  currentPage: 1,
};
let links: {
  first: string;
  last: string;
  previous?: string;
  next?: string;
} = {
  first: '',
  last: '',
  previous: undefined,
  next: undefined,
};

try {
  const response = await dragonBallApi.getAllCharacters({ page: 1, limit: 12 });
  characters = response?.items || [];
  meta = response?.meta || meta;
  links = response?.links || links;
} catch (error) {
  console.error('Error fetching characters:', error);
  // Keep default values
}

// Available filter options
const races = ['Human', 'Saiyan', 'Namekian', 'Majin', 'Android', 'Angel', 'God', 'Frieza Race'];
const genders = ['Male', 'Female'];
const affiliations = [
  'Z Fighter',
  'Red Ribbon Army',
  'Namekian Warrior',
  'Frieza Force',
  'Pride Troopers',
  'Team Universe 7',
];
---

<Layout title="Dragon Ball Characters">
  <div class="container mx-auto px-4 py-8">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-5xl font-manga text-dragon-gold mb-4">Dragon Ball Characters</h1>
      <p class="text-xl text-gray-300">Discover the most powerful fighters across the universe</p>
    </div>

    <!-- Filters -->
    <div class="bg-gray-800/50 backdrop-blur-sm p-6 rounded-lg mb-8 border border-dragon-gold/30">
      <form class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
        <div>
          <label class="block text-white font-semibold mb-2">Name</label>
          <input
            type="text"
            name="name"
            placeholder="Search by name..."
            class="w-full p-2 bg-gray-700/80 text-white rounded-lg border border-gray-600 focus:border-dragon-gold focus:outline-none placeholder-gray-400"
          />
        </div>

        <div>
          <label class="block text-white font-semibold mb-2">Race</label>
          <select
            name="race"
            class="w-full p-2 bg-gray-700/80 text-white rounded-lg border border-gray-600 focus:border-dragon-gold focus:outline-none"
          >
            <option value="">All Races</option>
            {races.map((raceOption) => <option value={raceOption}>{raceOption}</option>)}
          </select>
        </div>

        <div>
          <label class="block text-white font-semibold mb-2">Gender</label>
          <select
            name="gender"
            class="w-full p-2 bg-gray-700/80 text-white rounded-lg border border-gray-600 focus:border-dragon-gold focus:outline-none"
          >
            <option value="">All Genders</option>
            {genders.map((genderOption) => <option value={genderOption}>{genderOption}</option>)}
          </select>
        </div>

        <div>
          <label class="block text-white font-semibold mb-2">Affiliation</label>
          <select
            name="affiliation"
            class="w-full p-2 bg-gray-700/80 text-white rounded-lg border border-gray-600 focus:border-dragon-gold focus:outline-none"
          >
            <option value="">All Affiliations</option>
            {
              affiliations.map((affiliationOption) => (
                <option value={affiliationOption}>{affiliationOption}</option>
              ))
            }
          </select>
        </div>

        <div class="flex items-end">
          <button
            type="submit"
            class="w-full bg-dragon-gradient text-white p-2 rounded-lg font-semibold hover:shadow-lg hover:shadow-dragon-gold/25 transition-all duration-300"
          >
            Filter
          </button>
        </div>
      </form>
    </div>

    <!-- Results Info -->
    <div class="flex justify-between items-center mb-6">
      <p class="text-gray-300 results-info">
        Showing <span class="text-dragon-gold font-semibold">{meta.itemCount}</span> of <span
          class="text-dragon-gold font-semibold">{meta.totalItems}</span
        > characters
      </p>
      <p class="text-gray-300 page-info">
        Page <span class="text-dragon-gold font-semibold">{meta.currentPage}</span> of <span
          class="text-dragon-gold font-semibold">{meta.totalPages}</span
        >
      </p>
    </div>

    <!-- Characters Grid -->
    <div
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-8 characters-grid"
    >
      {characters.map((character) => <CharacterCard character={character} />)}
    </div>

    <!-- Pagination -->
    {
      meta.totalPages > 1 && (
        <div class="pagination-container">
          <Pagination
            currentPage={meta.currentPage}
            totalPages={meta.totalPages}
            baseUrl="/characters"
            searchParams={new URLSearchParams()}
            links={links}
          />
        </div>
      )
    }
  </div>

  <script src="/pagination.js" is:inline></script>
  <script is:inline>
    window.addEventListener('DOMContentLoaded', function () {
      if (window.DragonBallPagination) {
        window.DragonBallPagination.initCharacters();
      }
    });
  </script>
</Layout>
